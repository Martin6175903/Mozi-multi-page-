@-webkit-keyframes fade{0%{opacity:0}to{opacity:1}}@keyframes fade{0%{opacity:0}to{opacity:1}}a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1;font-family:"Europa",sans-serif}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:none}table{border-collapse:collapse;border-spacing:0}a{text-decoration:none}.container{max-width:1148px;width:100%;margin:0 auto}body.locked{overflow:hidden}.btn{display:inline-block;padding:14px 32px;background:#bf0830;border-radius:6px;border:0;letter-spacing:.005em;color:#fff;cursor:pointer;font-size:16px;line-height:150%;font-weight:700}.btn:hover{background:#e90e3e;-webkit-transition:all .3s;-o-transition:all .3s;transition:all .3s}@font-face{font-family:"Europa";src:url(../../fonts/Europa-Regular.ttf) format("truetype");font-weight:400}@font-face{font-family:"Europa";src:url(../../fonts/Europa-Bold.ttf) format("truetype");font-weight:700}.burger{width:27px;height:26px;position:relative}.burger.modal__menu span,.burger:after,.burger:before{-webkit-transition:all .3s ease;-o-transition:all .3s ease;transition:all .3s ease}.burger span,.burger:after,.burger:before{background:#bf0830;position:absolute;height:3px}.burger:after,.burger:before{content:"";width:27px}.burger:before{top:5px}.burger:after{bottom:4px}.burger span{top:11.5px;left:0;right:0}.burger.modal__menu span{opacity:0}.burger.modal__menu:before{background:#fff;-webkit-transform:rotate(45deg) translate(5px,4px);-ms-transform:rotate(45deg) translate(5px,4px);transform:rotate(45deg) translate(5px,4px)}.burger.modal__menu:after{background:#fff;-webkit-transform:rotate(-45deg) translate(6px,-5px);-ms-transform:rotate(-45deg) translate(6px,-5px);transform:rotate(-45deg) translate(6px,-5px)}.header{padding:24px 20px}.header .navbar{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.header .menu,.header .navbar{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header .menu__item:not(:first-child){margin-left:60px}.header .menu__item-link{font-size:18px;line-height:22px;color:#646a89}.header .menu__item-link:hover{text-decoration:underline;color:#bf0830;-webkit-transition:all .1s;-o-transition:all .1s;transition:all .1s}.header .burger{display:none}@media (max-width:991.98px){.container{max-width:970px}.btn{padding:12px 26px}.header .logo__img{max-width:150px}.header .menu__item{margin-left:30px}}@media (max-width:767.98px){.container{max-width:750px}.header .menu{position:absolute;top:-50%;left:50%;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;background-color:#2b2b48;width:100vw;height:100.2vh;-webkit-transition:top .5s ease;-o-transition:top .5s ease;transition:top .5s ease}.header .menu .menu__item:last-child{margin-left:auto;margin-right:auto;margin-top:25px}.header .menu .menu__item:not(:last-child){margin:25px 0}.header .menu .menu__item-link{font-size:30px;line-height:34px;color:#fff}.header .menu .btn__menu{font-size:30px;line-height:34px;padding:0;background-color:transparent;font-weight:400}}@media (max-width:479.98px){.container{max-width:none}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */